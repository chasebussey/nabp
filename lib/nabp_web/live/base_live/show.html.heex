<.header>
  <%= @base.name %>
  <:actions>
  </:actions>
</.header>

<h2>Production Lines</h2>
<div class="flex space-x-4">
  <!-- Display the Production Lines forms
       We may pull this into its own component later, but for now, just get it working -->
  <div class="max-w-full shrink-0 grow-1">
    <.form
      :let={f}
      for={:production_line}
      phx-submit="add_production_line"
    >
      <div class="flex space-x-2 my-2 align-center">
        <.input field={{f, :ticker}} placeholder="FRM"/>
        <button type="submit" class="bg-pink-600 phx-submit-loading:opacity-75 rounded-lg hover:bg-pink-500 px-3 text-sm font-semibold leading-6 text-white h-10 mt-2">Add</button>
      </div>
    </.form>
    <div class="ring-1 ring-blue-600 rounded-lg max-h-96 px-2 py-2 flex space-x-2">
      <%= if @base.production_lines == [] do %>
        <div class="h-96">
        </div>
      <% end %>
      <div :for={production_line <- @base.production_lines} class="basis-1/3">
        <div class="flex flex-col px-2 py-2 ring-1 rounded-lg items-center h-full">
          <.building_icon ticker={production_line.building_ticker}/>

          <!-- TODO: change the placeholder industy on material_icon -->
          <!-- TODO: make f2 work with ProductionLineRecipe changeset -->
          <%= for plr <- @production_line_recipes, plr.data.production_line_id == production_line.id do %>
            <div class="my-2 max-w-full">
              <.form
                :let={f2}
                for={plr}
                id={"#{plr.data.recipe.id}-allocate"}
                phx-change="update_recipe_allocation"
              >
                <.input field={{f2, :line_id}} value={production_line.id} type="hidden"/>
                <.input field={{f2, :recipe_id}} value={plr.data.recipe.id} type="hidden"/>
                <div class="inline-flex space-x-2 overflow-auto max-w-full items-center justify-between">
                  <%= Phoenix.HTML.Form.number_input f2, :order_size, 
                    class: ["mt-2 block w-[28%] grow-0 rounded-lg border-zinc-300 py-[7px] pl-[11px] pr-[5px] ml-0",
                            "text-zinc-900 focus:outline-none focus:ring-4 sm:text-sm sm:leading-6",
                            "phx-no-feedback:border-zinc-300 phx-no-feedback:focus:border-zinc-400 phx-no-feedback:focus:ring-zinc-800/5",
                            "dark:text-white dark:bg-gray-800 dark:border-gray-600 dark:phx-no-feedback:border-gray-600",
                            "dark:phx-no-feedback:border-gray-600 dark:phx-no-feedback:focus:border-gray-500 dark:phx-no-feedback:focus:ring-gray-100/5"] %>
                  <div class="inline-flex space-x-2">
                    <div :for={input <- plr.data.recipe.inputs} class="mt-2">
                      <.material_icon ticker={input.ticker} amount={input.amount} industry="plastics"/>
                    </div>
                    <div class="mt-2">
                      <span>-></span>
                    </div>
                    <div :for={output <- plr.data.recipe.outputs} class="mt-2">
                      <.material_icon ticker={output.ticker} amount={output.amount} industry="plastics"/>
                    </div>
                  </div>
                  <div>
                    <button phx-click="delete_production_line_recipe" 
                      phx-value-line_id={production_line.id} phx-value-recipe_id={plr.data.recipe_id}>
                      <Heroicons.x_mark mini class="h-4 w-4 mt-2 fill-rose-500"/>
                    </button>
                  </div>
                </div>
              </.form>
            </div>
          <% end %>

          <.form
            :let={f1}
            for={:recipe}
            phx-submit="add_recipe"
          >
            <div class="flex items-center space-x-2">
              <.input field={{f1, :line_id}} type="hidden" value={production_line.id}/>
              <.input field={{f1, :id}} type="select" prompt="Choose a recipe:" options={get_recipes_by_building_id(production_line.building_id)}/>
              <button type="submit" class="bg-pink-600 rounded-lg hover:bg-pink-500 px-3 text-sm font-semibold leading-6 text-white h-10 mt-2 mb-1 w-min">Add</button>
            </div>
          </.form>
        </div>
      </div>
    </div>
  </div>
</div>

<.modal :if={@live_action == :edit} id="base-modal" show on_cancel={JS.patch(~p"/bases/#{@base}")}>
  <.live_component
    module={NabpWeb.BaseLive.FormComponent}
    id={@base.id}
    title={@page_title}
    action={@live_action}
    base={@base}
    navigate={~p"/bases/#{@base}"}
  />
</.modal>
